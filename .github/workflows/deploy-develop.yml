name: Build and deploy to mulsig develop.

env:
  AWS_REGION: us-east-1
  APP_ENV: dev

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    if: github.repository_owner == 'fox-one'
    steps:
      - uses: actions/checkout@master

      - uses: actions/cache@v2
        with:
          path: |
            node_modules
            **/node_modules
          key: ${{ runner.os }}-${{ hashFiles('./yarn.lock') }}

      - run: yarn --frozen-lockfile --non-interactive

      - name: build
        env:
          CHANNEL: ${{ secrets.DEV_CHANNEL }}
          CHANNEL_NAME: ${{ secrets.DEV_CHANNEL_NAME }}
          BROKER_ID: ${{ secrets.DEV_BROKER_ID }}
          LOADING_COLOR: ${{ secrets.DEV_LOADING_COLOR }}
          PRIMARY_COLOR_DARK: ${{ secrets.DEV_PRIMARY_COLOR_DARK }}
          PRIMARY_COLOR_LIGHT: ${{ secrets.DEV_PRIMARY_COLOR_LIGHT }}
          MIXIN_CLIENT_ID: ${{ secrets.DEV_MIXIN_CLIENT_ID }}
          GA: ${{ secrets.GA }}
          API_BASE: ${{ secrets.DEV_API_BASE }}
          FIAT_TOKEN: ${{ secrets.DEV_FIAT_TOKEN }}
          LEGACY_WEB_HOST: ${{ secrets.DEV_LEGACY_WEB_HOST }}
          MTG_WEB_HOST: ${{ secrets.DEV_MTG_WEB_HOST }}
        run: yarn build

      # upload to aws
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ env.AWS_REGION }}
          aws-access-key-id: ${{ secrets.GLOBAL_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.GLOBAL_AWS_ACCESS_KEY_SECRET }}
      - run: aws s3 cp --recursive dist ${{ secrets.S3_URL_DEV }} --acl public-read --cache-control "max-age=604800"
      - run: aws s3 cp dist/index.html ${{ secrets.S3_URL_DEV }} --cache-control "no-cache" --acl public-read
